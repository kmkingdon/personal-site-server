{"version":3,"sources":["../../src/routes/routes.ts"],"sourcesContent":["import express, {type Request, type Response} from \"express\";\nimport { MONGO_COLLECTIONS, type aboutParams } from \"../common/common.js\";\nimport { generateImage, generatePrompt, getMongoData } from \"../services/services.js\";\nimport { createAboutPrompt } from \"../utils/utils.js\";\n\n\nconst router = express.Router();\n\nrouter.get(\"/workExperience\", async (_req:Request, res:Response) => {\n  let results = await getMongoData([MONGO_COLLECTIONS.WORKEXPERIENCE]);\n  res.send(results).status(200);\n});\n\nrouter.get(\"/education\", async (_req:Request, res:Response) => {\n  let results = await getMongoData([MONGO_COLLECTIONS.EDUCATION]);\n  res.send(results).status(200);\n});\n\nrouter.get(\"/default\", async (_req:Request, res:Response) => {\n  let results = await getMongoData([MONGO_COLLECTIONS.DEFAULT]);\n  res.send(results).status(200);\n});\n\nrouter.post(\"/about\", async (req:Request, res:Response) => {\n  const aboutParams: aboutParams = req.body;\n  const data = await getMongoData([\"education\", \"workExperience\", \"skills\", \"history\"]);\n  const prompt = createAboutPrompt({data, type:\"about\", ...aboutParams})\n  const text = await generatePrompt(prompt, \"about\");\n  res.send(text).status(200);\n});\n\nrouter.post(\"/home\", async (req:Request, res:Response) => {\n  const aboutParams: aboutParams = req.body;\n  const data = await getMongoData([\"education\", \"workExperience\", \"skills\", \"history\"]);\n  const prompt = createAboutPrompt({data, type:\"home\", ...aboutParams})\n  const words = await generatePrompt(prompt, \"about\");\n  const image =  await generateImage(words);\n  res.send({words, image}).status(200);\n});\n\nexport default router;"],"names":["express","MONGO_COLLECTIONS","generateImage","generatePrompt","getMongoData","createAboutPrompt","router","Router","get","_req","res","results","WORKEXPERIENCE","send","status","EDUCATION","DEFAULT","post","req","aboutParams","data","prompt","text","body","type","words","image"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,aAA4C,UAAU;AAC7D,SAASC,iBAAiB,QAA0B,sBAAsB;AAC1E,SAASC,aAAa,EAAEC,cAAc,EAAEC,YAAY,QAAQ,0BAA0B;AACtF,SAASC,iBAAiB,QAAQ,oBAAoB;AAGtD,IAAMC,SAASN,QAAQO,MAAM;AAE7BD,OAAOE,GAAG,CAAC;eAAmB,oBAAA,SAAOC,MAAcC;YAC7CC;;;;oBAAU;;wBAAMP;4BAAcH,kBAAkBW,cAAc;;;;oBAA9DD,UAAU;oBACdD,IAAIG,IAAI,CAACF,SAASG,MAAM,CAAC;;;;;;IAC3B;oBAHqCL,MAAcC;;;;AAKnDJ,OAAOE,GAAG,CAAC;eAAc,oBAAA,SAAOC,MAAcC;YACxCC;;;;oBAAU;;wBAAMP;4BAAcH,kBAAkBc,SAAS;;;;oBAAzDJ,UAAU;oBACdD,IAAIG,IAAI,CAACF,SAASG,MAAM,CAAC;;;;;;IAC3B;oBAHgCL,MAAcC;;;;AAK9CJ,OAAOE,GAAG,CAAC;eAAY,oBAAA,SAAOC,MAAcC;YACtCC;;;;oBAAU;;wBAAMP;4BAAcH,kBAAkBe,OAAO;;;;oBAAvDL,UAAU;oBACdD,IAAIG,IAAI,CAACF,SAASG,MAAM,CAAC;;;;;;IAC3B;oBAH8BL,MAAcC;;;;AAK5CJ,OAAOW,IAAI,CAAC;eAAU,oBAAA,SAAOC,KAAaR;YAClCS,aACAC,MACAC,QACAC;;;;oBAHAH,cAA2BD,IAAIK,IAAI;oBAC5B;;wBAAMnB;4BAAc;4BAAa;4BAAkB;4BAAU;;;;oBAApEgB,OAAO;oBACPC,SAAShB,kBAAkB;wBAACe,MAAAA;wBAAMI,MAAK;uBAAYL;oBAC5C;;wBAAMhB,eAAekB,QAAQ;;;oBAApCC,OAAO;oBACbZ,IAAIG,IAAI,CAACS,MAAMR,MAAM,CAAC;;;;;;IACxB;oBAN6BI,KAAaR;;;;AAQ1CJ,OAAOW,IAAI,CAAC;eAAS,oBAAA,SAAOC,KAAaR;YACjCS,aACAC,MACAC,QACAI,OACAC;;;;oBAJAP,cAA2BD,IAAIK,IAAI;oBAC5B;;wBAAMnB;4BAAc;4BAAa;4BAAkB;4BAAU;;;;oBAApEgB,OAAO;oBACPC,SAAShB,kBAAkB;wBAACe,MAAAA;wBAAMI,MAAK;uBAAWL;oBAC1C;;wBAAMhB,eAAekB,QAAQ;;;oBAArCI,QAAQ;oBACC;;wBAAMvB,cAAcuB;;;oBAA7BC,QAAS;oBACfhB,IAAIG,IAAI,CAAC;wBAACY,OAAAA;wBAAOC,OAAAA;oBAAK,GAAGZ,MAAM,CAAC;;;;;;IAClC;oBAP4BI,KAAaR;;;;AASzC,eAAeJ,OAAO"}