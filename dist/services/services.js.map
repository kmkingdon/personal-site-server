{"version":3,"sources":["../../src/services/services.ts"],"sourcesContent":["import { OpenAI } from \"openai\";\n\nimport db from \"../db/conn.js\";\nimport { MONGO_COLLECTIONS, type collections } from \"../common/common.js\";\n\nexport const getMongoData = async (type:collections[]) => {\n    let results:any={};\n    if(type.includes(MONGO_COLLECTIONS.WORKEXPERIENCE as collections)){\n        const workExperience = await db?.collection('workExperience');\n        let workResults = await workExperience?.find({}).toArray();\n        if(workResults){\n            results = Object.assign(results, workResults[0]) \n        }\n    }\n\n    if(type.includes(MONGO_COLLECTIONS.EDUCATION as collections)){\n        const education = await db?.collection(MONGO_COLLECTIONS.EDUCATION);\n        let eduResults = await education?.find({}).toArray();\n        if(eduResults){\n            results = Object.assign(results, eduResults[0]) \n        }\n    }\n\n    if(type.includes(MONGO_COLLECTIONS.SKILLS as collections)){\n        const skills = await db?.collection(MONGO_COLLECTIONS.SKILLS);\n        let skillsResults = await skills?.find({}).toArray();\n        if(skillsResults){\n            results = Object.assign(results, skillsResults[0]) \n        }\n    }\n\n    if(type.includes(MONGO_COLLECTIONS.HISTORY as collections)){\n        const history = await db?.collection(MONGO_COLLECTIONS.HISTORY);\n        let historyResults = await history?.find({}).toArray();\n        if(historyResults){\n            results = Object.assign(results, historyResults[0]) \n        }\n    }\n\n    if(type.includes(MONGO_COLLECTIONS.DEFAULT as collections)){\n        const defaultData = await db?.collection(MONGO_COLLECTIONS.DEFAULT);\n        let defaultResults = await defaultData?.find({}).toArray();\n        if(defaultResults){\n            results = Object.assign(results, defaultResults[0]) \n        }\n    }\n    return results;\n};\n\ntype ResponseString = \"text\" | \"json_object\" | undefined\ntype ResponseFormat = {\n    type: ResponseString;\n}\nexport const generatePrompt = async (prompt:string, type: string) => {\n    const configuration = {\n        apiKey: process.env.OPENAI_API_KEY,\n    };\n    const format:ResponseFormat = type === 'about' ? { type: \"text\" } : { type: \"json_object\" };\n    const openai = new OpenAI(configuration);\n    const completion = await openai.chat.completions.create({\n        messages: [{ role: \"user\", content: prompt }],\n        model: \"gpt-3.5-turbo\",\n        response_format: format\n    });\n    const text = completion.choices[0].message.content\n    return text;\n}\n\nexport const generateImage= async (prompt:string|null) => {\n    const configuration = {\n        apiKey: process.env.OPENAI_API_KEY,\n    };\n    const openai = new OpenAI(configuration);\n    const finalPrompt = `In more abstracted or impressionistic style, without legible text, depict the ideas of these concepts: ${JSON.stringify(prompt)}`\n    const image = await openai.images.generate({\n        model: \"dall-e-3\",\n        prompt: finalPrompt || 'Software engineer, educator, artist',\n        n: 1,\n        size: \"1024x1024\",\n      });\n    return image;\n}"],"names":["OpenAI","db","MONGO_COLLECTIONS","getMongoData","type","results","workExperience","workResults","education","eduResults","skills","skillsResults","history","historyResults","defaultData","defaultResults","includes","WORKEXPERIENCE","collection","find","toArray","Object","assign","EDUCATION","SKILLS","HISTORY","DEFAULT","generatePrompt","prompt","configuration","format","openai","completion","text","apiKey","process","env","OPENAI_API_KEY","chat","completions","create","messages","role","content","model","response_format","choices","message","generateImage","finalPrompt","image","JSON","stringify","images","generate","n","size"],"mappings":"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"}